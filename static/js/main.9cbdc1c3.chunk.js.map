{"version":3,"sources":["functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["TodoItem","props","useState","editing","setEditing","viewMode","editMode","display","todo","completed","id","title","useEffect","console","log","className","onDoubleClick","style","type","checked","onChange","handleFromTodosList","onClick","handleDeltodo","fontStyle","color","opacity","textDecoration","value","e","updateEditTodo","target","onKeyDown","key","TodosList","todos","map","delTodo","handleFromTodoContainer","Header","InputTodo","setTitle","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","SinglePage","slug","useParams","aboutContent","description","find","item","About","useRouteMatch","url","path","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","filter","prevState","updatedTitle","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9cbdc1c3.chunk.js","sourcesContent":["/* eslint-disable react/button-has-type */\n/* eslint-disable no-tabs */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { FaTrash } from 'react-icons/fa';\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEdit = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (e) => {\n    if (e.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  const { completed, id, title } = props.todo;\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  useEffect(() => () => {\n    console.log('Cleaning Up...');\n  }, []);\n\n  return (\n    <li className=\"item\">\n      <div onDoubleClick={handleEdit} style={viewMode}>\n        {' '}\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          checked={completed}\n          onChange={() => {\n\t\t\t\t\t  props.handleFromTodosList(id);\n          }}\n        />\n        <button\n          onClick={() => {\n\t\t\t\t\t  props.handleDeltodo(id);\n          }}\n        >\n          <FaTrash />\n        </button>\n        {' '}\n        <span style={completed ? completedStyle : null}>\n          {title}\n        </span>\n      </div>\n      <input\n        type=\"text\"\n        className=\"textInput\"\n        style={editMode}\n        value={title}\n        onChange={(e) => {\n\t\t\t\t  props.updateEditTodo(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","/* eslint-disable no-tabs */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => (\n  <ul>\n    {props.todos.map((todo) => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        handleDeltodo={props.delTodo}\n        handleFromTodosList={\n\t\t\t\t\t\tprops.handleFromTodoContainer\n\t\t\t\t\t}\n        updateEditTodo={props.updateEditTodo}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodosList;\n","import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h1>todos</h1>\n  </header>\n);\n\nexport default Header;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { FaPlusCircle } from 'react-icons/fa';\n\nconst InputTodo = (props) => {\n  const [title, setTitle] = useState('');\n\n  const handleInput = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim()) {\n      props.addTodoProps(title);\n      setTitle('');\n    } else {\n      alert('Please write item');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Add Todo...\"\n        className=\"input-text\"\n        value={title}\n        name=\"title\"\n        onChange={handleInput}\n      />\n      <button className=\"input-submit\">\n        <FaPlusCircle />\n      </button>\n    </form>\n  );\n};\n\nexport default InputTodo;\n","/* eslint-disable no-tabs */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SinglePage = () => {\n  const aboutData = [\n    {\n      slug: 'about-app',\n      title: 'About the App',\n      description:\n\t\t\t\t'In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.',\n    },\n    {\n      slug: 'about-author',\n      title: 'About the Author',\n      description:\n\t\t\t\t'This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.',\n    },\n  ];\n\n  const { slug } = useParams();\n  const aboutContent = aboutData.find((item) => item.slug === slug);\n  const { title, description } = aboutContent;\n\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\nexport default SinglePage;\n","import React from 'react';\nimport { Link, useRouteMatch, Route } from 'react-router-dom';\nimport SinglePage from './SinglePage';\n\nconst About = () => {\n  const { url, path } = useRouteMatch();\n\n  return (\n    <div className=\"about__content\">\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>\n            About Author\n          </Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotMatch = () => (\n  <div>\n    <h3>No match for this page</h3>\n  </div>\n);\nexport default NotMatch;\n","/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable no-tabs */\n/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MdClose } from 'react-icons/md';\nimport { FiMenu } from 'react-icons/fi';\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/about',\n      text: 'About',\n    },\n  ];\n  const handleToggle = () => {\n    setNavbarOpen(!navbarOpen);\n  };\n  const closeMenu = () => {\n    setNavbarOpen(false);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button onClick={handleToggle}>\n        {navbarOpen ? (\n          <MdClose className=\"MdClose\" />\n        ) : (\n          <FiMenu className=\"FiMenu\" />\n        )}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? ' showMenu' : ''}`}>\n        {links.map((link) => (\n          <li key={link.id}>\n            <NavLink\n              to={link.path}\n              activeClassName=\"active-link\"\n              className=\"link\"\n              onClick={() => {\n\t\t\t\t\t\t\t\t  closeMenu();\n              }}\n              exact\n            >\n              {link.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\nexport default Navbar;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-tabs */\n/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Route, Switch } from 'react-router-dom';\nimport TodosList from './TodosList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport About from '../../pages/About';\nimport NotMatch from '../../pages/NotMatch';\nimport Navbar from './Navbar';\n\nconst TodoContainer = () => {\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleCheck = (id) => {\n    setTodos((prevState) => prevState.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n      return todo;\n    }));\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => todo.id !== id),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const updateEditTodo = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = updatedTitle;\n        }\n        return todo;\n      }),\n    );\n  };\n\n  function getInitialTodos() {\n    // getting stored items\n    const temp = localStorage.getItem('todos');\n    const savedTodos = JSON.parse(temp);\n    return savedTodos || [];\n  }\n\n  useEffect(() => {\n    const temp = JSON.stringify(todos);\n    localStorage.setItem('todos', temp);\n  }, [todos]);\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header className=\"header\" />\n              <InputTodo\n                addTodoProps={addTodoItem}\n              />\n              <TodosList\n                todos={todos}\n                delTodo={delTodo}\n                handleFromTodoContainer={\n\t\t\t\t\t\t\t\t\thandleCheck\n\t\t\t\t\t\t\t\t}\n                updateEditTodo={updateEditTodo}\n              />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TodoContainer from './functionBased/components/TodoContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}